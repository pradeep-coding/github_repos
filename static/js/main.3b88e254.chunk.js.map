{"version":3,"sources":["components/LanguageFilterItem/index.js","components/RepositoryItem/index.js","components/GithubPopularRepos/index.js","App.js","index.js"],"names":["LanguageFilterItem","props","isActive","languageFilterDetails","setActiveLanguageFilterId","id","language","btnClassName","className","onClick","type","RepositoryItem","repositoryDetails","name","imageUrl","starsCount","forksCount","issuesCount","src","alt","apiStatusConstants","languageFiltersData","GithubPopularRepos","state","apiStatus","repositoriesData","activeLanguageFilterId","getRepositories","a","setState","apiUrl","fetch","response","ok","json","fetchedData","updatedData","popular_repos","map","eachRepository","avatar_url","stars_count","forks_count","issues_count","renderLoadingView","testid","color","height","width","renderFailureView","renderRepositoriesListView","renderRepositories","newFilterId","renderLanguageFiltersList","eachLanguageFilter","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b88e254.chunk.js","sourcesContent":["import './index.css'\n\nconst LanguageFilterItem = props => {\n  const {isActive, languageFilterDetails, setActiveLanguageFilterId} = props\n  const {id, language} = languageFilterDetails\n  const btnClassName = isActive\n    ? 'language-btn active-language-btn'\n    : 'language-btn'\n  const onClickLanguageFilter = () => {\n    setActiveLanguageFilterId(id)\n  }\n\n  return (\n    <li>\n      <button\n        className={btnClassName}\n        onClick={onClickLanguageFilter}\n        type=\"button\"\n      >\n        {language}\n      </button>\n    </li>\n  )\n}\n\nexport default LanguageFilterItem\n","import './index.css'\n\nconst RepositoryItem = props => {\n  const {repositoryDetails} = props\n  const {\n    name,\n    imageUrl,\n    starsCount,\n    forksCount,\n    issuesCount,\n  } = repositoryDetails\n\n  return (\n    <li className=\"repository-item\">\n      <img className=\"repository-image\" src={imageUrl} alt={name} />\n      <h1 className=\"repository-name\">{name}</h1>\n      <div className=\"stats-container\">\n        <img\n          className=\"stats-icon\"\n          src=\"https://assets.ccbp.in/frontend/react-js/stars-count-img.png\"\n          alt=\"stars\"\n        />\n        <p className=\"stats-text\">{starsCount} stars</p>\n      </div>\n      <div className=\"stats-container\">\n        <img\n          className=\"stats-icon\"\n          src=\"https://assets.ccbp.in/frontend/react-js/forks-count-img.png\"\n          alt=\"forks\"\n        />\n        <p className=\"stats-text\">{forksCount} forks</p>\n      </div>\n      <div className=\"stats-container\">\n        <img\n          className=\"stats-icon\"\n          src=\"https://assets.ccbp.in/frontend/react-js/issues-count-img.png\"\n          alt=\"open issues\"\n        />\n        <p className=\"stats-text\">{issuesCount} open issues</p>\n      </div>\n    </li>\n  )\n}\n\nexport default RepositoryItem\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\n\nimport LanguageFilterItem from '../LanguageFilterItem'\nimport RepositoryItem from '../RepositoryItem'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nconst languageFiltersData = [\n  {id: 'ALL', language: 'All'},\n  {id: 'JAVASCRIPT', language: 'Javascript'},\n  {id: 'RUBY', language: 'Ruby'},\n  {id: 'JAVA', language: 'Java'},\n  {id: 'CSS', language: 'CSS'},\n]\n\nclass GithubPopularRepos extends Component {\n  state = {\n    apiStatus: apiStatusConstants.initial,\n    repositoriesData: [],\n    activeLanguageFilterId: languageFiltersData[0].id,\n  }\n\n  componentDidMount() {\n    this.getRepositories()\n  }\n\n  getRepositories = async () => {\n    const {activeLanguageFilterId} = this.state\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const apiUrl = `https://apis.ccbp.in/popular-repos?language=${activeLanguageFilterId}`\n    const response = await fetch(apiUrl)\n    if (response.ok) {\n      const fetchedData = await response.json()\n      const updatedData = fetchedData.popular_repos.map(eachRepository => ({\n        id: eachRepository.id,\n        imageUrl: eachRepository.avatar_url,\n        name: eachRepository.name,\n        starsCount: eachRepository.stars_count,\n        forksCount: eachRepository.forks_count,\n        issuesCount: eachRepository.issues_count,\n      }))\n      this.setState({\n        repositoriesData: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  renderLoadingView = () => (\n    <div testid=\"loader\">\n      <Loader color=\"#0284c7\" height={80} type=\"ThreeDots\" width={80} />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"failure-view-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/api-failure-view.png\"\n        alt=\"failure view\"\n        className=\"failure-view-image\"\n      />\n      <h1 className=\"error-message\">Something Went Wrong</h1>\n    </div>\n  )\n\n  renderRepositoriesListView = () => {\n    const {repositoriesData} = this.state\n\n    return (\n      <ul className=\"repositories-list\">\n        {repositoriesData.map(eachRepository => (\n          <RepositoryItem\n            key={eachRepository.id}\n            repositoryDetails={eachRepository}\n          />\n        ))}\n      </ul>\n    )\n  }\n\n  renderRepositories = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderRepositoriesListView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  setActiveLanguageFilterId = newFilterId => {\n    this.setState({activeLanguageFilterId: newFilterId}, this.getRepositories)\n  }\n\n  renderLanguageFiltersList = () => {\n    const {activeLanguageFilterId} = this.state\n\n    return (\n      <ul className=\"filters-list\">\n        {languageFiltersData.map(eachLanguageFilter => (\n          <LanguageFilterItem\n            key={eachLanguageFilter.id}\n            isActive={eachLanguageFilter.id === activeLanguageFilterId}\n            languageFilterDetails={eachLanguageFilter}\n            setActiveLanguageFilterId={this.setActiveLanguageFilterId}\n          />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <div className=\"responsive-container\">\n          <h1 className=\"heading\">Popular</h1>\n          {this.renderLanguageFiltersList()}\n          {this.renderRepositories()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GithubPopularRepos\n","import './App.css'\n\nimport GithubPopularRepos from './components/GithubPopularRepos'\n\nconst App = () => <GithubPopularRepos />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}